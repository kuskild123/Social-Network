{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileCss/profile.module.css","components/Profile/ProfileCss/posts.module.css","IMAGES/Canada.jpg","components/Profile/ProfileCss/PostForm.module.css","components/Profile/Image/image.js","components/Profile/LocalPosts/AddPost.jsx","components/Profile/PostForm/PostForm.js","components/Profile/LocalPosts/AddPostContainer.js","components/Profile/MyPosts/MyPosts/MyProfileStatus.js","components/Profile/MyPosts/Posts/ProfileStatus.jsx","components/Profile/MyPosts/MyPosts/MyContacts.js","components/Profile/MyPosts/MyPosts/ProfileContactForm.js","components/Profile/MyPosts/MyPosts/ProfileContact.js","components/Profile/MyPosts/MyPosts/MyPostAboutMe.js","components/Profile/MyPosts/MyPosts/MyPost.jsx","components/Profile/MyPosts/AllMyPosts.js","components/Profile/MyPosts/Posts/post.jsx","components/Profile/ProfileMain/profile.js","components/Profile/ProfileMain/profileContainer.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Img","props","className","p","image","src","canada","text","AddPost","Post","map","m","id","allcomment","avatar","img","alt","fullName","name","comment","style","fontStyle","display","textAlign","onClick","setTimeout","likeFetch","DisLikePost","LikePost","heartActive","heart","likesCount","maxLength20","maxLengthCreator","TextArea","Element","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","f","add","component","placeholder","validate","required","PostWithForm","formdata","SetPostUser","NewPostInput","reset","AddPostContainer","this","React","Component","compose","connect","state","PostPage","Posts","MyProfileStatus","useState","editMode","setEditMode","MyStatus","status","setStatus","useEffect","deactivateEditMode","UpdateStatus","WithStatus","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","margin","ProfileStatus","Status","MyContactsMap","ContactTitle","ContactValue","MyContacts","keys","Prof","contacts","key","ProfileContactReduxFormContainer","error","l","someError","param","Input","type","MyProfile","FieldsHelp","ProfileContactForm","cursor","ChangeEditContacts","initialValues","formData","SaveMyContacts","ProfileContact","MyOption","setMyOption","ProfileImage","ItsI","color","marginTop","EditAvatar","marginBottom","target","files","SavePhoto","aboutMe","info","lookingForAJob","true","false","lookingForAJobDescription","EditContacts","MyPostAboutMe","MyPost","Loader","AllMyPosts","PostWithStatus","ProfileUsers","Profile","d","flex","AllPosts","IsAuth","ProfileContainerAPI","userPhoto","photos","small","large","userId","match","params","MyId","MyProfileId","GetProfile","GetMyStatus","GetMyProfile","GetStatus","refreshProfile","prevProps","prevState","ProfilePage","MyUser","auth","isAuth","SetProfile","withRouter"],"mappings":"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","file":"static/js/3.0131b595.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allcomment\":\"profile_allcomment__3sDFO\",\"comment\":\"profile_comment__3vqnv\",\"avatar\":\"profile_avatar__3PwbN\",\"image\":\"profile_image__buqtq\",\"true\":\"profile_true__1rdUz\",\"false\":\"profile_false__3h5Gr\",\"fullName\":\"profile_fullName__3W00c\",\"MyStatus\":\"profile_MyStatus__35QXF\",\"Status\":\"profile_Status__30jNT\",\"WithStatus\":\"profile_WithStatus__2GUn-\",\"info\":\"profile_info__2ftjM\",\"heart\":\"profile_heart__3TYbo\",\"heartActive\":\"profile_heartActive__297Lq\",\"likesCount\":\"profile_likesCount__2WXMB\",\"EditAvatar\":\"profile_EditAvatar__1Asug\",\"flex\":\"profile_flex__jLw8P\",\"AllPosts\":\"profile_AllPosts__t9HIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allcomment\":\"posts_allcomment__23nJn\",\"comment\":\"posts_comment__39Kmy\",\"avatar\":\"posts_avatar__2YlXb\",\"image\":\"posts_image__1QtHB\",\"like\":\"posts_like__rZvde\",\"likep\":\"posts_likep__XQVcN\",\"true\":\"posts_true__z9E95\",\"false\":\"posts_false__2hTV0\",\"fullName\":\"posts_fullName__ONUEn\"};","module.exports = __webpack_public_path__ + \"static/media/Canada.0c65b1b9.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PostForm_form__1iL66\",\"add\":\"PostForm_add__2hxJL\"};","import React from 'react';\r\nimport p from \"../ProfileCss/posts.module.css\";\r\nimport canada from '../../../IMAGES/Canada.jpg'\r\nfunction Img (props) {\r\n    return (\r\n        <div className={p.image}>\r\n            <img src={canada}/>\r\n            <div className={p.text}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Img};\r\n","import React from 'react';\r\nimport p from \"../ProfileCss/profile.module.css\";\r\n\r\nlet AddPost = (props) => {\r\n    return <div>\r\n        {[...props.Post]\r\n            .map(m=> {\r\n            return <div id={m.id} className={p.allcomment}>\r\n                    <div className={p.avatar}>\r\n                        <img src={m.img} alt=\"\"/>\r\n\r\n                        <div className={p.fullName}>{m.name}</div>\r\n                    </div>\r\n                    <div className={p.comment}>\r\n                        <p style={{fontStyle:'italic'}}>{m.comment}</p>\r\n                        <div style={{display:'flex',textAlign:'center'}}>\r\n                            <div onClick={() => setTimeout( () => { m.likeFetch?  props.DisLikePost(m.id) :\r\n                                    props.LikePost(m.id)},500 )}\r\n                                 className={m.likeFetch? p.heartActive : p.heart}><span>&#10084;</span></div>\r\n                            <div className={p.likesCount}>{m.likesCount}</div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        })}\r\n\r\n    </div>\r\n}\r\n\r\nexport default AddPost","import React from 'react';\r\nimport {Field, reduxForm,reset} from \"redux-form\";\r\nimport f from '../ProfileCss/PostForm.module.css'\r\nimport {required,maxLengthCreator} from \"../../help/validators/validators\";\r\nimport Element from \"../../common/FormControls/FormControls\";\r\nconst maxLength20 = maxLengthCreator(20)\r\nconst TextArea = Element(\"textarea\")\r\nlet PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={f.add} component={TextArea} name={\"NewPostInput\"} placeholder={\"Добавить пост....\"}\r\n                validate={[required,maxLength20]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Добавить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet PostReduxForm = reduxForm({form:'NewPost'})(PostForm)\r\nlet PostWithForm = (props) => {\r\n    let GetFormData = (formdata) => {\r\n        props.SetPostUser(formdata.NewPostInput,reset,'NewPost')\r\n        debugger;\r\n    }\r\n\r\n    return (\r\n        <div className={f.form}>\r\n            <PostReduxForm {...props} onSubmit={GetFormData}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostWithForm","import React from 'react';\r\nimport AddPost from \"./AddPost\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {DisLikePost, LikePost, SetPostUser} from \"../../../redux/Profile/ProfilePageReducers/PostPageReducer\";\r\nimport PostWithForm from \"../PostForm/PostForm\";\r\n\r\n\r\nclass AddPostContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Local Posts</h2>\r\n                <PostWithForm SetPostUser={this.props.SetPostUser}/>\r\n                <AddPost {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet MapStateToProps = (state) => {\r\n    return{\r\n        Post : state.PostPage.Posts\r\n    }\r\n}\r\nexport default compose(connect(MapStateToProps,{LikePost,DisLikePost,SetPostUser}),\r\n    )(AddPostContainer)","import React, {useEffect, useState} from 'react';\r\nimport p from '../../ProfileCss/profile.module.css';\r\n\r\n\r\nlet MyProfileStatus = (props) => {\r\n    //HOOKS\r\n\r\n    const [editMode,setEditMode] = useState(false)\r\n    const [status,setStatus] = useState(props.MyStatus)\r\n    useEffect( () => {\r\n        setStatus(props.MyStatus)\r\n    },[props.MyStatus] )\r\n    //END HOOKS\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.UpdateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value )\r\n    }\r\n    return (\r\n        <div className={p.WithStatus}>\r\n            {!editMode &&\r\n                <div>\r\n                    <span\r\n                        onDoubleClick={ activateEditMode } className={p.MyStatus} >{props.MyStatus? props.MyStatus:'edit status..'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={ onStatusChange }  autoFocus={true} onBlur={ deactivateEditMode }\r\n                                                          value={ status }/>\r\n                <button style={{margin:'8px'}} onClick={ deactivateEditMode }>Опубликовать</button>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MyProfileStatus;","import React from 'react';\r\nimport p from '../../ProfileCss/profile.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    \r\n    render() {\r\n        return <>\r\n\r\n           \r\n                <div>\r\n                   <span className={p.Status}>{!this.props.status? \"empty\": this.props.status}</span>\r\n                </div>\r\n\r\n            \r\n        </>\r\n        \r\n    }\r\n}\r\nexport default ProfileStatus;","import React from 'react';\nconst MyContacts = (props) => {\n    return <div><b>Contacts </b>\n        {Object.keys(props.Prof.contacts).map(key => {\n            return <MyContactsMap key={key} ContactTitle={key} ContactValue={props.Prof.contacts[key]}/>\n        })}</div>\n\n}\nconst MyContactsMap = (props) => {\n\n    return <>\n            <div><b>{props.ContactTitle + \" :\"}</b> {props.ContactValue ? props.ContactValue : 'none'}</div>\n        </>\n\n}\nexport default MyContacts;\n","import React from 'react';\r\nimport {Input, TextArea} from \"../../../common/FormControls/FormControls\";\r\nimport l from \"../../../login/LoginCss/login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst ProfileContactFormContainer = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <button>Save</button>\r\n        {props.error && <div className={l.someError}>{props.error}</div>}\r\n        <FieldsHelp param={'Full name :'} component={Input} name={'fullName'} placeholder={'your name..'}/>\r\n        <FieldsHelp param={'Looking for a Job :'} type={'checkbox'} component={Input} name={'lookingForAJob'}/>\r\n        <FieldsHelp param={'Job Description :'} component={TextArea} name={'lookingForAJobDescription'}\r\n                    placeholder={\"job description..\"}/>\r\n        <FieldsHelp param={'About me :'} component={TextArea} name={'aboutMe'} placeholder={\"about me..\"}/>\r\n        {Object.keys(props.MyProfile.contacts).map(key => {\r\n            return <div key={key} style={{margin: '10px'}}><FieldsHelp param={key} placeholder={`${key}..`}\r\n                                                                       component={Input} name={`contacts.${key}`}/>\r\n            </div>\r\n        })}\r\n    </form>\r\n}\r\nconst ProfileContactReduxFormContainer = reduxForm({form: 'Contacts'})(ProfileContactFormContainer)\r\nconst ProfileContactForm = (props) => {\r\n    const getFormData = (formData) => {\r\n        props.SaveMyContacts(formData);\r\n    }\r\n    return <div>\r\n        <span style={{cursor: \"pointer\"}} onClick={() => props.ChangeEditContacts(false)}>&#10006;</span>\r\n        <ProfileContactReduxFormContainer MyProfile={props.MyProfile} initialValues={props.initialValues}\r\n                                          onSubmit={getFormData}/>\r\n    </div>\r\n}\r\nconst FieldsHelp = (props) => {\r\n    return <div><b>{props.param}</b>\r\n        <Field component={props.component} name={props.name} placeholder={props.placeholder} type={props.type}/>\r\n    </div>\r\n}\r\nexport default ProfileContactForm;\r\n","import React, {useState} from 'react';\r\nimport p from \"../../ProfileCss/profile.module.css\";\r\nimport MyProfileStatus from \"./MyProfileStatus\";\r\nimport ProfileStatus from \"../Posts/ProfileStatus\";\r\nimport MyContacts from \"./MyContacts\";\r\nimport ProfileContactForm from \"./ProfileContactForm\";\r\n\r\n\r\nconst ProfileContact = (props) => {\r\n    const [MyOption, setMyOption] = useState(false);\r\n    // const [EditContacts,SetEditContacts] = useState(false)\r\n    let OnMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.SavePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    let activateMyOption = () => {\r\n        setMyOption(true)\r\n    }\r\n    let deActivateMyOption = () => {\r\n        setMyOption(false)\r\n    }\r\n    return <div>\r\n        <div className={p.avatar}>\r\n            <img src={props.ProfileImage(props.Prof)} alt=\"empty\"/>\r\n            <div className={p.fullName}>{props.Prof.fullName}</div>\r\n        </div>\r\n\r\n        <div className={p.comment}>\r\n            {\r\n                !MyOption && props.ItsI ?\r\n                    <div style={{margin: \"10px\"}}><span style={{color: 'darkcyan', cursor: 'pointer'}}\r\n                                                        onClick={activateMyOption}>Edit..</span></div> :\r\n                    props.ItsI &&\r\n                    <span style={{cursor: 'pointer', marginTop: \"20px\"}} onClick={deActivateMyOption}>&#10006;</span>\r\n            }\r\n\r\n            {\r\n                MyOption && props.ItsI && <div className={p.EditAvatar}>\r\n                    <div style={{marginBottom: '4px'}}>Изменить фото профиля</div>\r\n                    <input type={\"file\"} onChange={OnMainPhotoSelected}/></div>\r\n            }\r\n\r\n            <p>{props.Prof.aboutMe}</p>\r\n            <div className={p.info}>{props.Prof.lookingForAJob ? <div className={p.true}>Ищет работу</div> :\r\n                <div className={p.false}>Не ищет работу</div>}</div>\r\n            <p>{props.Prof.lookingForAJobDescription}</p>\r\n            {props.ItsI && !props.EditContacts &&\r\n            <button onClick={() => props.ChangeEditContacts(true)}>Edit contacts</button>}\r\n            {!props.EditContacts ? <MyContacts Prof={props.Prof}/> : props.ItsI ?\r\n                <ProfileContactForm initialValues={props.Prof}\r\n                                    MyProfile={props.Prof}\r\n                                    SaveMyContacts={props.SaveMyContacts}\r\n                                    ChangeEditContacts={props.ChangeEditContacts}/> : <MyContacts Prof={props.Prof}/>}\r\n            <div style={{margin: '8px 5px 5px 5px'}}>\r\n                {props.ItsI ? <MyProfileStatus UpdateStatus={props.UpdateStatus} MyStatus={props.MyStatus}/> :\r\n                    <ProfileStatus status={props.Status}/>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\nexport default ProfileContact","import React, {useState} from 'react';\r\nimport ProfileContact from \"./ProfileContact\";\r\n\r\n\r\nconst MyPostAboutMe = (props) => {\r\n    const [ItsI] = useState(true)\r\n\r\n    return <div>\r\n        <ProfileContact EditContacts={props.EditContacts} ChangeEditContacts={props.ChangeEditContacts}\r\n                        Prof={props.MyProfile} ItsI={ItsI} {...props}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default MyPostAboutMe","import React from 'react';\r\nimport p from \"../../ProfileCss/profile.module.css\";\r\nimport Loader from \"../../../common/Preloader/Loader\";\r\nimport MyPostAboutMe from \"./MyPostAboutMe\";\r\n\r\n\r\nlet MyPost = (props) => {\r\n    if (props.MyProfile.length === 0) {\r\n        return <Loader/>\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div className={p.allcomment}>\r\n                    <MyPostAboutMe {...props}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport MyPost from \"./MyPosts/MyPost\";\r\n\r\nconst AllMyPosts = (props) => {\r\n    return <div>\r\n        <h2>My posts</h2>\r\n        <MyPost {...props}/>\r\n\r\n    </div>\r\n}\r\n\r\nexport default AllMyPosts","import React, {useState} from 'react';\r\nimport p from \"../../ProfileCss/profile.module.css\";\r\nimport ProfileContact from \"../MyPosts/ProfileContact\";\r\n\r\nlet PostWithStatus = (props) => {\r\n    const [ItsI] = useState(false)\r\n    if (props.ProfileUsers.length === 0) {\r\n        return null\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Posts</h2>\r\n            <div className={p.allcomment}>\r\n                <ProfileContact Prof={props.ProfileUsers} ItsI={ItsI} {...props}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default PostWithStatus;","import React from 'react';\r\nimport {Img} from \"../Image/image\";\r\nimport d from '../ProfileCss/profile.module.css'\r\nimport LocalPostContainer from \"../LocalPosts/AddPostContainer\";\r\nimport AllMyPosts from \"../MyPosts/AllMyPosts\";\r\nimport PostWithStatus from \"../MyPosts/Posts/post\";\r\n\r\nlet Profile = (props) => {\r\n\r\n\r\n    return <div>\r\n        <Img/>\r\n        <div className={d.flex}>\r\n            <div className={d.AllPosts}>\r\n                { props.IsAuth && <LocalPostContainer/>}\r\n            </div>\r\n            { props.IsAuth && <div className={d.AllPosts}><AllMyPosts {...props}/></div> }\r\n            <div className={d.AllPosts}>\r\n                <PostWithStatus {...props}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport {Profile};","import React from 'react';\r\nimport {Profile} from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {GetProfile,\r\n    SetProfile, GetStatus, UpdateStatus, GetMyProfile, GetMyStatus, SavePhoto, SaveMyContacts, ChangeEditContacts\r\n} from \"../../../redux/Profile/ProfilePageReducers/ProfilePageReducer\"\r\nimport {compose} from \"redux\";\r\nimport {SetPostUser} from \"../../../redux/Profile/ProfilePageReducers/PostPageReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ProfileContainerAPI extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.userPhoto = 'https://pixelbox.ru/wp-content/uploads/2018/02/anonymous_steam_avatars-1-1.jpg'\r\n        this.ProfileImage = (props) => {\r\n            if(props.photos.small){\r\n                return props.photos.small\r\n            }\r\n            if(props.photos.large) {\r\n                return props.photos.large;\r\n            }\r\n            else{\r\n                return this.userPhoto\r\n            }\r\n\r\n        }\r\n    }\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if(!userId){\r\n            userId = 2\r\n        }\r\n\r\n        let MyId = () => {\r\n            if(this.props.IsAuth){\r\n                return this.props.MyProfileId;\r\n            }\r\n        }\r\n        this.props.GetProfile( userId )\r\n        this.props.GetMyStatus(MyId())\r\n        this.props.GetMyProfile(MyId())\r\n        this.props.GetStatus(userId)\r\n    }\r\n    componentDidMount(){\r\n        this.refreshProfile()\r\n       }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            <Profile ProfileImage={this.ProfileImage} {...this.props}/>\r\n        </>\r\n    }\r\n}\r\nlet MapStateToProps = (state) => {\r\n    return{\r\n            MyProfile:state.ProfilePage.MyUser,\r\n            ProfileUsers:state.ProfilePage.ProfileUsers,\r\n            Status:state.ProfilePage.Status,\r\n            MyStatus:state.ProfilePage.MyStatus,\r\n            MyProfileId:state.auth.id,\r\n            IsAuth:state.auth.isAuth,\r\n            EditContacts:state.ProfilePage.EditContacts\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(MapStateToProps,{SetProfile,GetProfile,GetStatus,\r\n        UpdateStatus,GetMyProfile,GetMyStatus,\r\n        SetPostUser,SavePhoto,SaveMyContacts,ChangeEditContacts\r\n}),withRouter)(ProfileContainerAPI)\r\n\r\n"],"sourceRoot":""}