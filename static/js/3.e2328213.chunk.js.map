{"version":3,"sources":["components/dialogs/DialogsCss/dialogs.module.css","components/dialogs/DialogsCss/dialogItem.module.css","components/dialogs/DialogsItems/dialogItem.js","components/dialogs/DialogsForm/DialogsForm.js","components/dialogs/DialogsMain/dialogs.js","components/HOC/WithAuthRedirect.js","components/dialogs/DialogsMain/dialogs-container.js"],"names":["module","exports","Dial","props","className","d","dialogs","names","activeClassName","NameActive","to","id","name","line","Message","messages","message1","MessageTwo","messages2","message2","Input","Element","MaxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","m","AddMessage","placeholder","validate","required","FormButton","DialogsForm","formdata","AddDialog","Dialog","Dialogs","DialogData","map","D","key","Message1","MessageData1","Message2","MessageData2","dial","mess","mess1","mess2","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","DialogContainer","compose","DialogPage","dispatch","NewMessageBody","AddDialogMessageCreate"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,KAAO,sBAAsB,WAAa,4BAA4B,WAAa,8B,oBCArKD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,UAAY,8BAA8B,MAAQ,0BAA0B,KAAO,yBAAyB,WAAa,iC,wICGnL,SAASC,EAAMC,GACZ,OACI,yBAAKC,UAAWC,IAAEC,SAEd,yBAAKF,UAAWC,IAAEE,OACd,6BACI,kBAAC,IAAD,CAASC,gBAAiBH,IAAEI,WAAYC,GAAI,YAAcP,EAAMQ,IAAKR,EAAMS,OAElF,yBAAKR,UAAWC,IAAEQ,SAS9B,SAASC,EAAQX,GACb,OAEQ,yBAAKC,UAAWC,IAAEU,UACd,6BAAMZ,EAAMa,WAI5B,SAASC,EAAWd,GAChB,OACI,yBAAKC,UAAWC,IAAEa,WACbf,EAAMgB,U,sCC1BbC,EAAQC,YAAQ,SAChBC,EAAcC,YAAiB,IAkBjCC,EAAmBC,YAAU,CAC7BC,KAAO,WADYD,EAhBC,SAACtB,GACrB,OACI,0BAAMwB,SAAUxB,EAAMyB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWV,EAAQR,KAAM,aACzBR,UAAW2B,IAAEC,WAAYC,YAAa,6GACtCC,SAAU,CAACC,IAASb,MAG/B,6BACI,4BAAQlB,UAAW2B,IAAEK,YAArB,+DAqBDC,EAXG,SAAClC,GAIf,OACI,6BACI,kBAACqB,EAAD,iBAAsBrB,EAAtB,CAA6BwB,SALnB,SAACW,GACfnC,EAAMoC,UAAUD,EAASN,kBC1BjC,SAASQ,EAAQrC,GAEb,IAAIsC,EAAUtC,EAAMuC,WAAWC,KAAI,SAAAC,GAAC,OAAG,kBAAC1C,EAAD,CAAMS,GAAIiC,EAAEjC,GAAIkC,IAAKD,EAAEjC,GAAIC,KAAMgC,EAAEhC,UACtEkC,EAAW3C,EAAM4C,aAAaJ,KAAI,SAAAZ,GAAC,OAAG,kBAACjB,EAAD,CAASH,GAAIoB,EAAEpB,GAAIkC,IAAKd,EAAEpB,GAAIK,SAAUe,EAAEf,cAChFgC,EAAW7C,EAAM8C,aAAaN,KAAI,SAAAZ,GAAC,OAAG,kBAACd,EAAD,CAAYN,GAAIoB,EAAEpB,GAAIkC,IAAKd,EAAEpB,GAAIQ,SAAUY,EAAEZ,cACvF,OAEI,yBAAKf,UAAWC,IAAEC,SACd,yBAAKF,UAAWC,IAAE6C,MACbT,GAGL,yBAAKrC,UAAWC,IAAEQ,OAClB,yBAAKT,UAAWC,IAAE8C,MAEd,yBAAK/C,UAAWC,IAAE+C,OACbN,GAEL,yBAAK1C,UAAWC,IAAEgD,OACbL,GAEL,yBAAK5C,UAAWC,IAAEqB,MACd,kBAAC,EAAgBvB,M,oCCvBjCmD,EAAkB,SAACC,GACnB,MAAO,CACHC,OAAOD,EAAME,KAAKD,SAoBXE,EAjBQ,SAACC,GAAe,IAC7BC,EAD4B,uKAItB,OAAIC,KAAK1D,MAAMqD,OAKR,kBAACG,EAAcE,KAAK1D,OAHnB,kBAAC,IAAD,CAAUO,GAAI,cANA,GACFoD,IAAMH,WAatC,OAD2BI,YAAQT,EAARS,CAAyBH,ICflDI,E,uKAEE,OACI,6BACI,kBAACxB,EAAWqB,KAAK1D,Y,GAJH2D,IAAMH,WAwBrBM,sBACXF,aAfkB,SAACR,GACnB,MAAM,CACFb,WAAWa,EAAMW,WAAWxB,WAC5BK,aAAaQ,EAAMW,WAAWnB,aAC9BE,aAAaM,EAAMW,WAAWjB,iBAGb,SAACkB,GACtB,MAAO,CACH5B,UAAU,SAAC6B,GACPD,EAASE,YAAuBD,SAMxCV,EAFWO,CAGbD","file":"static/js/3.e2328213.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__bfVaa\",\"line\":\"dialogs_line__M1qTm\",\"form\":\"dialogs_form__3zGYz\",\"AddMessage\":\"dialogs_AddMessage__2El5P\",\"FormButton\":\"dialogs_FormButton__2r_gv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"dialogItem_messages__2C5wQ\",\"messages2\":\"dialogItem_messages2__2ldaK\",\"names\":\"dialogItem_names__15hBa\",\"line\":\"dialogItem_line__6trzi\",\"NameActive\":\"dialogItem_NameActive__lUhYH\"};","import React from 'react';\r\nimport d from '../DialogsCss/dialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Dial (props){\r\n   return(\r\n       <div className={d.dialogs}>\r\n          \r\n           <div className={d.names}>\r\n               <div>\r\n                   <NavLink activeClassName={d.NameActive} to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n               </div>\r\n            <div className={d.line}></div>\r\n           </div>\r\n\r\n\r\n\r\n       </div>\r\n\r\n   )\r\n}\r\nfunction Message(props) {\r\n    return (\r\n\r\n            <div className={d.messages}>\r\n                <div>{props.message1}</div>\r\n            </div>\r\n    )\r\n}\r\nfunction MessageTwo(props){\r\n    return(\r\n        <div className={d.messages2}>\r\n            {props.message2}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Dial,Message,MessageTwo};","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport m from \"../DialogsCss/dialogs.module.css\"\r\nimport {maxLengthCreator, required} from \"../../help/validators/validators\";\r\nimport Element from \"../../common/FormControls/FormControls\";\r\n\r\nconst Input = Element(\"input\")\r\nconst MaxLength50 = maxLengthCreator(50)\r\n\r\nlet DialogsFormInside = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Input}  name={\"AddMessage\"}\r\n                       className={m.AddMessage} placeholder={\"Напишите сообщение...\"}\r\n                       validate={[required,MaxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className={m.FormButton}>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet DialogsReduxForm = reduxForm({\r\n    form : \"Dialogs\"\r\n})(DialogsFormInside)\r\n\r\nlet DialogsForm = (props) => {\r\n    let GetFormData = (formdata) => {\r\n        props.AddDialog(formdata.AddMessage)\r\n    }\r\n    return (\r\n        <div>\r\n            <DialogsReduxForm {...props} onSubmit={GetFormData}></DialogsReduxForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsForm","import React from 'react';\r\nimport d from '../DialogsCss/dialogs.module.css';\r\nimport {Dial, Message, MessageTwo} from '../DialogsItems/dialogItem'\r\nimport DialogsForm from \"../DialogsForm/DialogsForm\";\r\n\r\nfunction Dialog (props) {\r\n\r\n    let Dialogs = props.DialogData.map(D=> <Dial id={D.id} key={D.id} name={D.name}></Dial>);\r\n    let Message1 = props.MessageData1.map(m=> <Message id={m.id} key={m.id} message1={m.message1}></Message>);\r\n    let Message2 = props.MessageData2.map(m=> <MessageTwo id={m.id} key={m.id} message2={m.message2}></MessageTwo>);\r\n    return(\r\n\r\n        <div className={d.dialogs}>\r\n            <div className={d.dial}>\r\n                {Dialogs}\r\n\r\n            </div>\r\n            <div className={d.line}></div>\r\n            <div className={d.mess}>\r\n\r\n                <div className={d.mess1}>\r\n                    {Message1}\r\n                </div>\r\n                <div className={d.mess2}>\r\n                    {Message2}\r\n                </div>\r\n                <div className={d.form}>\r\n                    <DialogsForm {...props}></DialogsForm>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport {Dialog};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.auth.isAuth\r\n    }\r\n}\r\nlet withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n\r\n                if(!this.props.isAuth){\r\n                    return (\r\n                        <Redirect to={'login'}></Redirect>\r\n                    )\r\n                }\r\n                return <Component {...this.props}></Component>\r\n\r\n        }\r\n    }\r\n    let RedirectConnectState = connect(mapStateToProps)(RedirectComponent)\r\n    return RedirectConnectState\r\n}\r\n\r\nexport default withAuthRedirect;\r\n\r\n","import React from 'react';\r\nimport {Dialog} from \"./dialogs\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddDialogMessageCreate} from \"../../../redux/Dialogs/DialogPageReducer\";\r\nimport withAuthRedirect from \"../../HOC/WithAuthRedirect\";\r\n\r\nclass DialogContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialog {...this.props}></Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state) => {\r\n    return{\r\n        DialogData:state.DialogPage.DialogData,\r\n        MessageData1:state.DialogPage.MessageData1,\r\n        MessageData2:state.DialogPage.MessageData2\r\n    }\r\n};\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        AddDialog:(NewMessageBody) => {\r\n            dispatch(AddDialogMessageCreate(NewMessageBody))\r\n        }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(MapStateToProps,MapDispatchToProps),\r\n    withAuthRedirect\r\n)(DialogContainer)\r\n"],"sourceRoot":""}